[metadata]
name = astroPHD
author = Nathaniel Starkman
author_email = n.starkman@mail.utoronto.ca
license = BSD 3-Clause
license_file = licenses/LICENSE.rst
url = https://astrophd.readthedocs.io
description = Useful python and astrophysics-concomitant tools
long_description = file: README.rst
long_description_content_type = text/x-rst
edit_on_github = False
github_project = nstarman/astroPHD

[options]
zip_safe = False
packages = find:
python_requires = >=3.6
setup_requires = setuptools_scm
install_requires =
    astropy
    ipython
    matplotlib
    numpy
    pandas
    plotly
    scipy
    tqdm
    wrapt
    typing_extensions
    PyYAML

[options.extras_require]
test =
    pytest-astropy
docs =
    sphinx-astropy
fitting = 
    scipy
    lmfit
amuse = 
    amuse-framework
    amuse-bhtree
    amuse-seba
pickle =
    dill
galpy = 
    galpy


[options.package_data]
* = data/*, data/*/*
astroPHD.astronomy.instruments.filtertransforms.MegaCam_PanSTARR = data/*
astroPHD.constants = data/*
astroPHD.data_utils = data/*

[tool:pytest]
minversion = 3.6
testpaths = "astroPHD" "docs"
astropy_header = false
text_file_format = rst
doctest_plus = enabled
doctest_norecursedirs=*/astroPHD/extern/*
addopts = --doctest-rst

[coverage:run]
omit =
    astroPHD/_astropy_init*
    astroPHD/conftest.py
    astroPHD/*setup_package*
    astroPHD/tests/*
    astroPHD/*/tests/*
    astroPHD/extern/*
    astroPHD/version*
    */astroPHD/_astropy_init*
    */astroPHD/conftest.py
    */astroPHD/*setup_package*
    */astroPHD/tests/*
    */astroPHD/*/tests/*
    */astroPHD/extern/*
    */astroPHD/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_
